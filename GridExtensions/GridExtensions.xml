<?xml version="1.0"?>

<doc>
  <assembly>
    <name>GridExtensions</name>
  </assembly>
  <members>
    <member name="T:GridExtensions.DataFilter">
      <summary>
        Public Wrapper for the internal DataFilter class in the .Net framework.
        The purpose of this class is to test if single <see cref="T:System.Data.DataRow" />s match
        a given filter expression.
      </summary>
    </member>
    <member name="M:GridExtensions.DataFilter.#ctor(System.String,System.Data.DataTable)">
      <summary>
        Creates a new instance.
      </summary>
      <param name="expression">Filter expression string.</param>
      <param name="dataTable"><see cref="T:System.Data.DataTable" /> of the rows to be tested.</param>
    </member>
    <member name="M:GridExtensions.DataFilter.Invoke(System.Data.DataRow)">
      <summary>
        Tests whether a single <see cref="T:System.Data.DataRow" /> matches the filter expression.
      </summary>
      <param name="row"><see cref="T:System.Data.DataRow" /> to be tested.</param>
      <returns>True if the row matches the filter expression, otherwise false.</returns>
    </member>
    <member name="M:GridExtensions.DataFilter.Invoke(System.Data.DataRow,System.Data.DataRowVersion)">
      <summary>
        Tests whether a single <see cref="T:System.Data.DataRow" /> matches the filter expression.
      </summary>
      <param name="row"><see cref="T:System.Data.DataRow" /> to be tested.</param>
      <param name="version">The row version to use.</param>
      <returns>True if the row matches the filter expression, otherwise false.</returns>
    </member>
    <member name="T:GridExtensions.DataGridExtension">
      <summary>
        Implementation of <see cref="T:GridExtensions.IGridExtension" /> to extend a foreign
        instance of <see cref="T:System.Windows.Forms.DataGrid" />. This is done by calling
        protected properties of the grid by using reflection.
      </summary>
    </member>
    <member name="M:GridExtensions.DataGridExtension.#ctor(System.Windows.Forms.DataGrid)">
      <summary>
        Creates a new instance
      </summary>
      <param name="grid">The instance to be enhanced</param>
    </member>
    <member name="E:GridExtensions.DataGridExtension.CaptionColorsChanged">
      <summary>
        Gets raised when either <see cref="P:System.Windows.Forms.DataGrid.CaptionBackColor" /> or
        <see cref="P:System.Windows.Forms.DataGrid.CaptionForeColor" /> has changed
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridExtension.HorizontalScrollbar">
      <summary>
        Publishes the <see cref="T:System.Windows.Forms.DataGrid" /> class's property
        <see cref="P:System.Windows.Forms.DataGrid.HorizScrollBar" />
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridExtension.VerticalScrollbar">
      <summary>
        Publishes the <see cref="T:System.Windows.Forms.DataGrid" /> class's property
        <see cref="P:System.Windows.Forms.DataGrid.VertScrollBar" />
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridExtension.CurrentView">
      <summary>
        Gets the currently visible <see cref="T:System.Data.DataView" />.
        Returns null when no <see cref="T:System.Data.DataView" /> is set.
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridExtension.Grid">
      <summary>
        Gets the extended <see cref="T:System.Windows.Forms.DataGrid" />.
      </summary>
    </member>
    <member name="T:GridExtensions.FilterPosition">
      <summary>
        Enumeration representing the regions where the filter GUI elements
        are shown.
      </summary>
    </member>
    <member name="F:GridExtensions.FilterPosition.Top">
      <summary>
        Filter GUI above the grid.
      </summary>
    </member>
    <member name="F:GridExtensions.FilterPosition.Bottom">
      <summary>
        Filter GUI beyond the grid.
      </summary>
    </member>
    <member name="F:GridExtensions.FilterPosition.Caption">
      <summary>
        Filter GUI in the caption of the grid.
      </summary>
    </member>
    <member name="F:GridExtensions.FilterPosition.Off">
      <summary>
        Turns off the filter
      </summary>
    </member>
    <member name="T:GridExtensions.DataGridFilterExtender">
      <summary>
        Component which allows <see cref="T:GridExtensions.ExtendedDataGrid" />s to be extended with
        autometed filter functionality.
      </summary>
    </member>
    <member name="E:GridExtensions.DataGridFilterExtender.AfterFiltersChanged">
      <summary>
        Event, which gets fired whenever the filter criteria has been changed.
      </summary>
    </member>
    <member name="E:GridExtensions.DataGridFilterExtender.BeforeFiltersChanging">
      <summary>
        Event, which gets fired whenever the filter criteria are going to be changed.
      </summary>
    </member>
    <member name="E:GridExtensions.DataGridFilterExtender.GridFilterBound">
      <summary>
        Event, which gets fired whenever an <see cref="T:GridExtensions.IGridFilter" /> has been bound
        and thus added to this instance.
      </summary>
    </member>
    <member name="E:GridExtensions.DataGridFilterExtender.GridFilterUnbound">
      <summary>
        Event, which gets fired whenever an <see cref="T:GridExtensions.IGridFilter" /> has been unbound
        and thus removed to this instance.
      </summary>
    </member>
    <member name="M:GridExtensions.DataGridFilterExtender.#ctor(System.ComponentModel.IContainer)">
      <summary>
        Creates a new instance
      </summary>
      <param name="container"></param>
    </member>
    <member name="M:GridExtensions.DataGridFilterExtender.#ctor">
      <summary>
        Creates a new instance
      </summary>
    </member>
    <member name="M:GridExtensions.DataGridFilterExtender.Dispose(System.Boolean)">
      <summary>
        Verwendete Ressourcen bereinigen.
      </summary>
    </member>
    <member name="M:GridExtensions.DataGridFilterExtender.InitializeComponent">
      <summary>
        Erforderliche Methode für die Designerunterstützung.
        Der Inhalt der Methode darf nicht mit dem Code-Editor geändert werden.
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridFilterExtender.GridMode">
      <summary>
        Gets and sets the mode for the grid.
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridFilterExtender.KeepFilters">
      <summary>
        Gets and sets whether filters are kept while switching between different tables.
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridFilterExtender.AutoRefreshMode">
      <summary>
        Gets and sets whether the filter criteria is automatically refreshed when
        changes are made to the filter controls. If set to false then a call to
        <see cref="M:GridExtensions.DataGridFilterExtender.RefreshFilters" /> is needed to manually refresh the criteria.
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridFilterExtender.FilterBoxPosition">
      <summary>
        Gets and sets the poisiton of the filter GUI elements.
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridFilterExtender.AutoAdjustGridPosition">
      <summary>
        Sets whether the bounds of the extended DataGrid should be
        set automatically depending on where the filters are displayed,
        so that the totally covered area by grid and filters is always
        the same.
      </summary>
      <remarks>
        This wont function correctly if the grid is docked
      </remarks>
    </member>
    <member name="P:GridExtensions.DataGridFilterExtender.FilterText">
      <summary>
        Gets and sets the text for the filter label.
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridFilterExtender.FilterTextVisible">
      <summary>
        Gets and sets whether the filter label should be visible.
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridFilterExtender.ControlBounds">
      <summary>
        The bounds of the control with the GUI for filtering
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridFilterExtender.NeededControlHeight">
      <summary>
        The Height of the control which is positioned for filtering
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridFilterExtender.FilterFactory">
      <summary>
        Gets and sets the <see cref="T:GridExtensions.IGridFilterFactory" /> used to generate the filter GUI.
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridFilterExtender.Operator">
      <summary>
        The selected operator to combine the filter criterias.
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridFilterExtender.MessageErrorMode">
      <summary>
        Gets and sets what information is showed to the user
        if an error in the builded filter criterias occurs.
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridFilterExtender.ConsoleErrorMode">
      <summary>
        Gets and sets what information is showed to the user
        if an error in the builded filter criterias occurs.
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridFilterExtender.DataGrid">
      <summary>
        Gets and sets the grid which should be extended.
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridFilterExtender.BaseFilters">
      <summary>
        Gets a modifyable collection which maps <see cref="P:System.Data.DataTable.TableName" />s
        to base filter strings which are applied in front of the automatically
        created filter.
      </summary>
      <remarks>
        The grid contents is not automatically refreshed when modifying this
        collection. A call to <see cref="M:GridExtensions.DataGridFilterExtender.RefreshFilters" /> is needed for this.
      </remarks>
    </member>
    <member name="P:GridExtensions.DataGridFilterExtender.BaseFilterOperator">
      <summary>
        Gets or sets which operator should be used to combine the base filter
        with the automatically created filters.
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridFilterExtender.BaseFilterEnabled">
      <summary>
        Gets or sets whether base filters should be used when refreshing
        the filter criteria. Setting it to false will disable the functionality
        while still keeping the base filter strings in the
        <see cref="P:GridExtensions.DataGridFilterExtender.BaseFilters" />
        collection intact.
      </summary>
    </member>
    <member name="P:GridExtensions.DataGridFilterExtender.CurrentTableBaseFilter">
      <summary>
        Gets or sets the currently used base filter. Internally it adjusts the
        <see cref="P:GridExtensions.DataGridFilterExtender.BaseFilters" /> collection with the given value and the current
        <see cref="P:System.Data.DataTable.TableName" /> and also initiates a refresh.
      </summary>
    </member>
    <member name="M:GridExtensions.DataGridFilterExtender.GetGridFilters">
      <summary>
        Gets all currently set <see cref="T:GridExtensions.IGridFilter" />s.
      </summary>
      <returns>Collection of <see cref="T:GridExtensions.IGridFilter" />s.</returns>
    </member>
    <member name="M:GridExtensions.DataGridFilterExtender.ClearFilters">
      <summary>
        Clears all filters to initial state.
      </summary>
    </member>
    <member name="M:GridExtensions.DataGridFilterExtender.GetFilters">
      <summary>
        Gets all filters currently set
      </summary>
      <returns></returns>
    </member>
    <member name="M:GridExtensions.DataGridFilterExtender.SetFilters(System.String[])">
      <summary>
        Sets all filters to the specified values.
        The values must be in order of the column styles in the current view.
        This function should normally be used with data previously coming
        from the <see cref="M:GridExtensions.DataGridFilterExtender.GetFilters" /> function.
      </summary>
      <param name="filters">filters to set</param>
    </member>
    <member name="M:GridExtensions.DataGridFilterExtender.RefreshFilters">
      <summary>
        Refreshes the filter criteria to match the current contents of the associated
        filter controls.
      </summary>
    </member>
    <member name="M:GridExtensions.DataGridFilterExtender.OnBeforeFiltersChanging(System.EventArgs)">
      <summary>
        Raises the <see cref="E:GridExtensions.DataGridFilterExtender.BeforeFiltersChanging" /> event.
      </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:GridExtensions.DataGridFilterExtender.OnAfterFiltersChanged(System.EventArgs)">
      <summary>
        Raises the <see cref="E:GridExtensions.DataGridFilterExtender.AfterFiltersChanged" /> event.
      </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:GridExtensions.DataGridFilterExtender.OnGridFilterBound(GridExtensions.GridFilterEventArgs)">
      <summary>
        Raises the <see cref="E:GridExtensions.DataGridFilterExtender.GridFilterBound" /> event.
      </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:GridExtensions.DataGridFilterExtender.OnGridFilterUnbound(GridExtensions.GridFilterEventArgs)">
      <summary>
        Raises the <see cref="E:GridExtensions.DataGridFilterExtender.GridFilterUnbound" /> event.
      </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:GridExtensions.DataGridFilterExtender.BeginInit">
      <summary>
        Sets a flag to true representing that the component is now initializing.
      </summary>
      <remarks>
        This is important as the component must know if the properties are set within
        the designer generated code so that no abnormal moving of the contained grid occurs
        when AutoAdjustGridPosition is set to true
      </remarks>
    </member>
    <member name="M:GridExtensions.DataGridFilterExtender.EndInit">
      <summary>
        Sets a flag to false representing that the initialization of the
        component has completed
      </summary>
    </member>
    <member name="T:GridExtensions.DataGridStyleCreator">
      <summary>
        Class with static methods to automatically generate
        table and column styles
      </summary>
    </member>
    <member name="M:GridExtensions.DataGridStyleCreator.CreateTableStyle(System.Data.DataTable)">
      <summary>
        Creates a table style for the specified table.
      </summary>
      <param name="table">
        The <see cref="T:System.Data.DataTable" /> for which a style should be generated
      </param>
      <returns>The newly generated style.</returns>
    </member>
    <member
      name="M:GridExtensions.DataGridStyleCreator.CreateTableStyle(System.Data.DataTable,System.Windows.Forms.DataGrid)">
      <summary>
        Creates a table style for the specified table.
        If a grid is specified than its settings will be used for initial
        column style settings.
      </summary>
      <param name="table">
        The <see cref="T:System.Data.DataTable" /> for which a style should be generated
      </param>
      <param name="grid">The <see cref="T:System.Windows.Forms.DataGrid" /> with default settings</param>
      <returns>The newly generated style.</returns>
    </member>
    <member
      name="M:GridExtensions.DataGridStyleCreator.CreateTableStyle(System.Data.DataTable,System.Windows.Forms.DataGrid,System.Boolean)">
      <summary>
        Creates a table style for the specified table.
        If a grid is specified than its settings will be used for initial
        column style settings.
      </summary>
      <param name="table">
        The <see cref="T:System.Data.DataTable" /> for which a style should be generated
      </param>
      <param name="grid">The <see cref="T:System.Windows.Forms.DataGrid" /> with default settings</param>
      <param name="addToGrid">
        Tells whether the generated style should automatically be added to the
        grid.
      </param>
      <returns>The newly generated style.</returns>
    </member>
    <member name="M:GridExtensions.DataGridStyleCreator.CreateColumnStyle(System.Data.DataColumn)">
      <summary>
        Creates a <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> based on its data type.
      </summary>
      <param name="column">
        The <see cref="T:System.Data.DataColumn" /> for which a style should be generated
      </param>
      <returns>A column style</returns>
    </member>
    <member
      name="M:GridExtensions.DataGridStyleCreator.CreateColumnStyle(System.Data.DataColumn,System.Windows.Forms.DataGrid)">
      <summary>
        Creates a <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> based on its data type.
        If a grid is specified than its settings will be used for initial
        column style settings.
      </summary>
      <param name="column">
        The <see cref="T:System.Data.DataColumn" /> for which a style should be generated
      </param>
      <param name="grid">The <see cref="T:System.Windows.Forms.DataGrid" /> with default settings</param>
      <returns>A column style</returns>
    </member>
    <member name="T:GridExtensions.ExtendedDataGrid">
      <summary>
        From <see cref="T:System.Windows.Forms.DataGrid" /> deriven class which provides some extra functionalities.
      </summary>
    </member>
    <member name="M:GridExtensions.ExtendedDataGrid.#ctor">
      <summary>
        Creates a new instance.
      </summary>
    </member>
    <member name="P:GridExtensions.ExtendedDataGrid.AutoCreateTableStyles">
      <summary>
        Controls whether TableStyles are automatically generated.
      </summary>
    </member>
    <member name="E:GridExtensions.ExtendedDataGrid.CaptionColorsChanged">
      <summary>
        Gets raised when either <see cref="P:System.Windows.Forms.DataGrid.CaptionBackColor" /> or
        <see cref="P:System.Windows.Forms.DataGrid.CaptionForeColor" /> has changed
      </summary>
    </member>
    <member name="P:GridExtensions.ExtendedDataGrid.Grid">
      <summary>
        Returns the instance itself
      </summary>
    </member>
    <member name="P:GridExtensions.ExtendedDataGrid.HorizontalScrollbar">
      <summary>
        Publishes the <see cref="T:System.Windows.Forms.DataGrid" /> class's property
        <see cref="P:System.Windows.Forms.DataGrid.HorizScrollBar" />
      </summary>
    </member>
    <member name="P:GridExtensions.ExtendedDataGrid.VerticalScrollbar">
      <summary>
        Publishes the <see cref="T:System.Windows.Forms.DataGrid" /> class's property
        <see cref="P:System.Windows.Forms.DataGrid.VertScrollBar" />
      </summary>
    </member>
    <member name="P:GridExtensions.ExtendedDataGrid.CurrentView">
      <summary>
        Gets the currently visible <see cref="T:System.Data.DataView" />.
        Returns null when no <see cref="T:System.Data.DataView" /> is set.
      </summary>
    </member>
    <member name="M:GridExtensions.ExtendedDataGrid.CreateDefaultTableStyle(System.Data.DataTable)">
      <summary>
        Method for automatically generating a <see cref="T:System.Windows.Forms.DataGridTableStyle" /> for
        a given table and adds it to the list of table styles.
      </summary>
      <param name="table">
        <see cref="T:System.Data.DataTable" /> for which the <see cref="T:System.Windows.Forms.DataGridTableStyle" />
        should be generated.
      </param>
    </member>
    <member name="M:GridExtensions.ExtendedDataGrid.OnDataSourceChanged(System.EventArgs)">
      <summary>
        If <see cref="P:GridExtensions.ExtendedDataGrid.AutoCreateTableStyles" /> is set to true and no
        <see cref="T:System.Windows.Forms.DataGridTableStyle" /> is set for the current visible table
        then this method will automatically create a default style.
      </summary>
      <param name="e"></param>
    </member>
    <member name="M:GridExtensions.ExtendedDataGrid.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
      <summary>
        Raises the <see cref="E:GridExtensions.ExtendedDataGrid.CaptionColorsChanged" /> event when
        <see cref="P:System.Windows.Forms.DataGrid.CaptionBackColor" /> or
        <see cref="P:System.Windows.Forms.DataGrid.CaptionForeColor" /> have changed
      </summary>
      <param name="e">event arguments</param>
    </member>
    <member name="T:GridExtensions.FilterableDataGrid">
      <summary>
        Control which embeds an <see cref="T:GridExtensions.ExtendedDataGrid" /> and a
        <see cref="T:GridExtensions.DataGridFilterExtender" /> for providing automatic
        filtering on all visible columns.
      </summary>
    </member>
    <member name="E:GridExtensions.FilterableDataGrid.AfterFiltersChanged">
      <summary>
        Event, which gets fired whenever the filter criteria has been changed.
      </summary>
    </member>
    <member name="E:GridExtensions.FilterableDataGrid.BeforeFiltersChanging">
      <summary>
        Event, which gets fired whenever the filter criteria are going to be changed.
      </summary>
    </member>
    <member name="E:GridExtensions.FilterableDataGrid.GridFilterBound">
      <summary>
        Event, which gets fired whenever an <see cref="T:GridExtensions.IGridFilter" /> has been bound
        and thus added to this instance.
      </summary>
    </member>
    <member name="E:GridExtensions.FilterableDataGrid.GridFilterUnbound">
      <summary>
        Event, which gets fired whenever an <see cref="T:GridExtensions.IGridFilter" /> has been unbound
        and thus removed to this instance.
      </summary>
    </member>
    <member name="M:GridExtensions.FilterableDataGrid.#ctor">
      <summary>
        Creates a new instance.
      </summary>
    </member>
    <member name="M:GridExtensions.FilterableDataGrid.InitializeComponent">
      <summary>
        Erforderliche Methode für die Designerunterstützung.
        Der Inhalt der Methode darf nicht mit dem Code-Editor geändert werden.
      </summary>
    </member>
    <member name="P:GridExtensions.FilterableDataGrid.GridMode">
      <summary>
        Gets and sets the mode for the grid.
      </summary>
    </member>
    <member name="P:GridExtensions.FilterableDataGrid.AutoRefreshMode">
      <summary>
        Gets and sets whether the filter criteria is automatically refreshed when
        changes are made to the filter controls. If set to false then a call to
        <see cref="M:GridExtensions.FilterableDataGrid.RefreshFilters" /> is needed to manually refresh the criteria.
      </summary>
    </member>
    <member name="P:GridExtensions.FilterableDataGrid.KeepFilters">
      <summary>
        Gets and sets whether filters are kept while switching between different tables.
      </summary>
    </member>
    <member name="P:GridExtensions.FilterableDataGrid.EmbeddedDataGrid">
      <summary>
        Publishes the embedded <see cref="T:GridExtensions.ExtendedDataGrid" /> to allow
        full control over its settings.
      </summary>
    </member>
    <member name="P:GridExtensions.FilterableDataGrid.FilterBoxPosition">
      <summary>
        Gets and sets the poisiton of the filter GUI elements.
      </summary>
    </member>
    <member name="P:GridExtensions.FilterableDataGrid.FilterText">
      <summary>
        Gets and sets the text for the filter label.
      </summary>
    </member>
    <member name="P:GridExtensions.FilterableDataGrid.FilterFactory">
      <summary>
        Gets and sets the <see cref="T:GridExtensions.IGridFilterFactory" /> used to generate the filter GUI.
      </summary>
    </member>
    <member name="P:GridExtensions.FilterableDataGrid.FilterTextVisible">
      <summary>
        Gets and sets whether the filter label should be visible.
      </summary>
    </member>
    <member name="P:GridExtensions.FilterableDataGrid.Operator">
      <summary>
        The selected operator to combine the filter criterias.
      </summary>
    </member>
    <member name="P:GridExtensions.FilterableDataGrid.DataSource">
      <summary>
        Gets and sets the <see cref="T:System.Data.DataView" /> which should be displayed in the grid.
        This is needed because only <see cref="T:System.Data.DataView" />s provide in built mechanisms
        to filter their content.
      </summary>
    </member>
    <member name="P:GridExtensions.FilterableDataGrid.AutoCreateTableStyles">
      <summary>
        Controls whether TableStyles are automatically generated.
      </summary>
    </member>
    <member name="P:GridExtensions.FilterableDataGrid.MessageErrorMode">
      <summary>
        Gets and sets what information is shown to the user
        if an error in the builded filter criterias occurs.
      </summary>
    </member>
    <member name="P:GridExtensions.FilterableDataGrid.ConsoleErrorMode">
      <summary>
        Gets and sets what information is printed to the console
        if an error in the builded filter criterias occurs.
      </summary>
    </member>
    <member name="P:GridExtensions.FilterableDataGrid.BaseFilters">
      <summary>
        Gets a modifyable collection which maps <see cref="P:System.Data.DataTable.TableName" />s
        to base filter strings which are applied in front of the automatically
        created filter.
      </summary>
      <remarks>
        The grid contents is not automatically refreshed when modifying this
        collection. A call to <see cref="M:GridExtensions.FilterableDataGrid.RefreshFilters" /> is needed for this.
      </remarks>
    </member>
    <member name="P:GridExtensions.FilterableDataGrid.BaseFilterOperator">
      <summary>
        Gets or sets which operator should be used to combine the base filter
        with the automatically created filters.
      </summary>
    </member>
    <member name="P:GridExtensions.FilterableDataGrid.BaseFilterEnabled">
      <summary>
        Gets or sets whether base filters should be used when refreshing
        the filter criteria. Setting it to false will disable the functionality
        while still keeping the base filter strings in the
        <see cref="P:GridExtensions.FilterableDataGrid.BaseFilters" />
        collection intact.
      </summary>
    </member>
    <member name="P:GridExtensions.FilterableDataGrid.CurrentTableBaseFilter">
      <summary>
        Gets or sets the currently used base filter. Internally it adjusts the
        <see cref="P:GridExtensions.FilterableDataGrid.BaseFilters" /> collection with the given value and the current
        <see cref="P:System.Data.DataTable.TableName" /> and also initiates a refresh.
      </summary>
    </member>
    <member name="M:GridExtensions.FilterableDataGrid.GetGridFilters">
      <summary>
        Gets all currently set <see cref="T:GridExtensions.IGridFilter" />s.
      </summary>
      <returns>Collection of <see cref="T:GridExtensions.IGridFilter" />s.</returns>
    </member>
    <member name="M:GridExtensions.FilterableDataGrid.ClearFilters">
      <summary>
        Clears all filters to initial state.
      </summary>
    </member>
    <member name="M:GridExtensions.FilterableDataGrid.GetFilters">
      <summary>
        Gets all filters currently set
      </summary>
      <returns></returns>
    </member>
    <member name="M:GridExtensions.FilterableDataGrid.SetFilters(System.String[])">
      <summary>
        Sets all filters to the specified values.
        The values must be in order of the column styles in the current view.
        This function should normally be used with data previously coming
        from the <see cref="M:GridExtensions.FilterableDataGrid.GetFilters" /> function.
      </summary>
      <param name="filters">filters to set</param>
    </member>
    <member name="M:GridExtensions.FilterableDataGrid.RefreshFilters">
      <summary>
        Refreshes the filter criteria to match the current contents of the associated
        filter controls.
      </summary>
    </member>
    <member name="M:GridExtensions.FilterableDataGrid.OnBeforeFiltersChanging(System.EventArgs)">
      <summary>
        Raises the <see cref="E:GridExtensions.FilterableDataGrid.BeforeFiltersChanging" /> event.
      </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:GridExtensions.FilterableDataGrid.OnAfterFiltersChanged(System.EventArgs)">
      <summary>
        Raises the <see cref="E:GridExtensions.FilterableDataGrid.AfterFiltersChanged" /> event.
      </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:GridExtensions.FilterableDataGrid.OnGridFilterBound(GridExtensions.GridFilterEventArgs)">
      <summary>
        Raises the <see cref="E:GridExtensions.FilterableDataGrid.GridFilterBound" /> event.
      </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:GridExtensions.FilterableDataGrid.OnGridFilterUnbound(GridExtensions.GridFilterEventArgs)">
      <summary>
        Raises the <see cref="E:GridExtensions.FilterableDataGrid.GridFilterUnbound" /> event.
      </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:GridExtensions.FilterableDataGrid.Dispose(System.Boolean)">
      <summary>
        Cleans up.
      </summary>
    </member>
    <member name="M:GridExtensions.FilterableDataGrid.OnResize(System.EventArgs)">
      <summary>
        Repositions the grid to match the new size
      </summary>
      <param name="e">event arguments</param>
    </member>
    <member name="T:GridExtensions.GridFilterCollection">
      <summary>
        Typesafe collection of <see cref="T:GridExtensions.IGridFilter" />s.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterCollection.#ctor(System.Collections.IList,System.Collections.Hashtable)">
      <summary>
        Creates a new instance.
      </summary>
      <param name="columnStyles">
        List of <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> which are associated with
        <see cref="T:GridExtensions.IGridFilter" />s.
      </param>
      <param name="columnStylesToGridFiltersHash">
        Mapping between
        <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> and <see cref="T:GridExtensions.IGridFilter" />s.
      </param>
    </member>
    <member name="M:GridExtensions.GridFilterCollection.Contains(GridExtensions.IGridFilter)">
      <summary>
        Determines whether a given <see cref="T:GridExtensions.IGridFilter" /> is contained in this instance.
      </summary>
      <param name="gridFilter"><see cref="T:GridExtensions.IGridFilter" /> to be checked.</param>
      <returns>True if <see cref="T:GridExtensions.IGridFilter" /> is contained in this instance otherwise False.</returns>
    </member>
    <member name="P:GridExtensions.GridFilterCollection.Item(System.Int32)">
      <summary>
        Gets the element at the specified index.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterCollection.Item(System.Windows.Forms.DataGridColumnStyle)">
      <summary>
        Gets the <see cref="T:GridExtensions.IGridFilter" /> which is associated with the given
        <see cref="T:System.Windows.Forms.DataGridColumnStyle" />.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterCollection.GetByMappingName(System.String)">
      <summary>
        Gets a <see cref="T:GridExtensions.IGridFilter" /> which is associated with a
        <see cref="T:System.Windows.Forms.DataGridColumnStyle" />
        with the specified <see cref="P:System.Windows.Forms.DataGridColumnStyle.MappingName" />.
      </summary>
      <param name="mappingName">
        <see cref="P:System.Windows.Forms.DataGridColumnStyle.MappingName" />
      </param>
      <returns>An <see cref="T:GridExtensions.IGridFilter" /> or null if no appropriate was found.</returns>
    </member>
    <member name="M:GridExtensions.GridFilterCollection.GetByHeaderText(System.String)">
      <summary>
        Gets a <see cref="T:GridExtensions.IGridFilter" /> which is associated with a
        <see cref="T:System.Windows.Forms.DataGridColumnStyle" />
        with the specified <see cref="P:System.Windows.Forms.DataGridColumnStyle.HeaderText" />.
      </summary>
      <param name="headerText">
        <see cref="P:System.Windows.Forms.DataGridColumnStyle.HeaderText" />
      </param>
      <returns>An <see cref="T:GridExtensions.IGridFilter" /> or null if no appropriate was found.</returns>
    </member>
    <member name="M:GridExtensions.GridFilterCollection.FilterByGridFilterType(System.Type,System.Boolean)">
      <summary>
        Creates a filtered list which only contains <see cref="T:GridExtensions.IGridFilter" />s of the specified type.
      </summary>
      <param name="dataType">Type by which should be filtered.</param>
      <param name="exactMatch">
        Defines whether the types must match exactly
        (otherwise inheriting types will also be returned).
      </param>
      <returns>Collection of matching <see cref="T:GridExtensions.IGridFilter" />s.</returns>
    </member>
    <member name="T:GridExtensions.GridFilterEventHandler">
      <summary>
        Delegate for use with <see cref="T:GridExtensions.GridFilterEventArgs" />.
      </summary>
    </member>
    <member name="T:GridExtensions.GridFilterEventArgs">
      <summary>
        Argumentsclass for events needing extended informations about <see cref="T:GridExtensions.IGridFilter" />s.
      </summary>
    </member>
    <member
      name="M:GridExtensions.GridFilterEventArgs.#ctor(System.Data.DataColumn,System.Windows.Forms.DataGridColumnStyle,GridExtensions.IGridFilter)">
      <summary>
        Creates a new instance
      </summary>
      <param name="column">Column the <see cref="T:GridExtensions.IGridFilter" /> is created for.</param>
      <param name="columnStyle">Column style the <see cref="T:GridExtensions.IGridFilter" /> is created for.</param>
      <param name="gridFilter">Default <see cref="T:GridExtensions.IGridFilter" /> instance.</param>
    </member>
    <member name="P:GridExtensions.GridFilterEventArgs.DataType">
      <summary>
        Type of the column the <see cref="T:GridExtensions.IGridFilter" /> is created for.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterEventArgs.ColumnName">
      <summary>
        Name of the column the <see cref="T:GridExtensions.IGridFilter" /> is created for.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterEventArgs.TableName">
      <summary>
        Name of the table the <see cref="T:GridExtensions.IGridFilter" /> is created for.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterEventArgs.Column">
      <summary>
        The column the <see cref="T:GridExtensions.IGridFilter" /> is created for.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterEventArgs.ColumnStyle">
      <summary>
        The column style the <see cref="T:GridExtensions.IGridFilter" /> is created for.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterEventArgs.HeaderText">
      <summary>
        Text of the header of the column the <see cref="T:GridExtensions.IGridFilter" /> is created for.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterEventArgs.Table">
      <summary>
        The table the <see cref="T:GridExtensions.IGridFilter" /> is created for.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterEventArgs.GridFilter">
      <summary>
        Gets/sets the <see cref="T:GridExtensions.IGridFilter" /> which should be used.
      </summary>
    </member>
    <member name="T:GridExtensions.GridFilterFactories.DefaultGridFilterFactory">
      <summary>
        Default implementation for <see cref="T:GridExtensions.IGridFilterFactory" /> which
        should be applicable for most standard needs.
        The creation process consists of these steps:
        1. If the column data type is an enumeration and
        <see cref="P:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.HandleEnumerationTypes" />
        is set to true than an <see cref="T:GridExtensions.GridFilters.EnumerationGridFilter" /> is created.
        2. If <see cref="P:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.CreateDistinctGridFilters" /> is set to true than it is analyzed
        if the column contains less or equal distinct values than specified by
        <see cref="P:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.MaximumDistinctValues" />. If yes than an
        <see cref="T:GridExtensions.GridFilters.DistinctValuesGridFilter" />
        is created. The
        <see cref="P:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.MaximumDistinctValues" /> property is not only
        important to reduce the maximum number of entries the <see cref="T:System.Windows.Forms.ComboBox" />
        gets filled with but also to improve performance because the analysis of the
        columns data will be stopped immediately when more values are found then
        specified by it and thus the analysis doesn't have to search through the whole
        data source.
        3. If a grid filter type is specified for the data type of the column than this
        one will be created. The data type to grid filter type matching can be altered
        by calls to
        <see
          cref="M:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.AddGridFilter(System.Type,System.Type)" />
        and <see cref="M:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.RemoveGridFilter(System.Type)" />. Note
        that only grid filter types which implement <see cref="T:GridExtensions.IGridFilter" /> and which
        have an empty public constructor are allowed.
        4. If still no filter was created than the filter specified by
        <see cref="P:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.DefaultGridFilterType" /> will be created. By default this is the
        <see cref="T:GridExtensions.GridFilters.TextGridFilter" />. Note that again only grid filter types which implement
        <see cref="T:GridExtensions.IGridFilter" /> and which have an empty public constructor are allowed.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.#ctor">
      <summary>
        Creates a new instance.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.DefaultShowDateInBetweenOperator">
      <summary>
        Sets or gets whether created <see cref="T:GridExtensions.GridFilters.DateGridFilter" />s should by default
        show the 'in between' operator.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.DefaultShowNumericInBetweenOperator">
      <summary>
        Sets or gets whether created <see cref="T:GridExtensions.GridFilters.NumericGridFilter" />s should by default
        show the 'in between' operator.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.HandleEnumerationTypes">
      <summary>
        Gets/sets whether enumeration types are automatically handled
        with a special <see cref="T:GridExtensions.IGridFilter" /> implementation.
        Only applies for datatypes not explicitely set.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.DefaultGridFilterType">
      <summary>
        Gets and sets the <see cref="T:System.Type" /> of the IGridFilter which
        should handle all unspecified datatypes.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.CreateDistinctGridFilters">
      <summary>
        Gets or sets whether grid filters of type <see cref="T:GridExtensions.GridFilters.DistinctValuesGridFilter" />
        should be created automatically. Note that this might reduce performance
        as every column is analyzed to get the different values it contains.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.MaximumDistinctValues">
      <summary>
        Gets or sets the maximum number of distinct values column should have
        when a <see cref="T:GridExtensions.GridFilters.DistinctValuesGridFilter" /> is created.
        If this limit is exceeded than a standard filter will be created.
        Value is only considered when
        <see cref="P:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.CreateDistinctGridFilters" /> is
        set to true.
        The value set must be set to 1 or greater. If all values contained within
        a column without any limitation should be generated than set this property
        to <see cref="F:System.Int32.MaxValue" />.
      </summary>
    </member>
    <member
      name="M:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.ConfigureDistinctGridFilteHandling(System.Boolean,System.Int32)">
      <summary>
        Sets <see cref="P:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.CreateDistinctGridFilters" /> and
        <see cref="P:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.MaximumDistinctValues" />
        simultaneously to improve performance.
      </summary>
      <param name="createDistinctGridFilters">
        Indicator whether grid filters of type <see cref="T:GridExtensions.GridFilters.DistinctValuesGridFilter" />
        should be created automatically
      </param>
      <param name="maximumDistinctValues">
        Maximum number of distinct values column should have
        when a <see cref="T:GridExtensions.GridFilters.DistinctValuesGridFilter" /> is created.
      </param>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.AddGridFilter(System.Type,System.Type)">
      <summary>
        Adds a type for <see cref="T:GridExtensions.IGridFilter" /> for the
        specified datatype.
      </summary>
      <param name="dataType">
        <see cref="T:System.Type" /> for which a special <see cref="T:GridExtensions.IGridFilter" /> should be generated.
      </param>
      <param name="gridFilterType">
        <see cref="T:System.Type" /> of the <see cref="T:GridExtensions.IGridFilter" /> to be generated.
      </param>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.RemoveGridFilter(System.Type)">
      <summary>
        Removes a specialized type for <see cref="T:GridExtensions.IGridFilter" /> for a given datatype.
      </summary>
      <param name="dataType">
        <see cref="T:System.Type" /> for which a special <see cref="T:GridExtensions.IGridFilter" /> should be removed.
      </param>
    </member>
    <member
      name="M:GridExtensions.GridFilterFactories.DefaultGridFilterFactory.CreateGridFilterInternal(System.Data.DataColumn,System.Windows.Forms.DataGridColumnStyle)">
      <summary>
        Creates a new instance of <see cref="T:GridExtensions.IGridFilter" />.
        The concrete implementation depends on the given datatype.
        The parameters tablename and columnanem are ignored in this implementation.
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> for which the filter control should be created.</param>
      <param name="columnStyle">The <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> for which the filter control should be created.</param>
      <returns>A <see cref="T:GridExtensions.IGridFilter" />.</returns>
    </member>
    <member name="T:GridExtensions.GridFilterFactories.DistinctValuesGridFilterFactory">
      <summary>
        <see cref="T:GridExtensions.IGridFilterFactory" /> implementation which creates a
        <see cref="T:GridExtensions.GridFilters.DistinctValuesGridFilter" /> on every column.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.DistinctValuesGridFilterFactory.#ctor">
      <summary>
        Creates a new instance.
      </summary>
    </member>
    <member
      name="M:GridExtensions.GridFilterFactories.DistinctValuesGridFilterFactory.CreateGridFilterInternal(System.Data.DataColumn,System.Windows.Forms.DataGridColumnStyle)">
      <summary>
        Return always a <see cref="T:GridExtensions.GridFilters.DistinctValuesGridFilter" />.
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> for which the filter control should be created.</param>
      <param name="columnStyle">The <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> for which the filter control should be created.</param>
      <returns>A <see cref="T:GridExtensions.IGridFilter" />.</returns>
    </member>
    <member name="T:GridExtensions.GridFilterFactories.FullTextSearchGridFilterFactoryTextBox">
      <summary>
        Implementation of <see cref="T:GridExtensions.IGridFilterFactory" /> allowing
        to search in multiple columns with only one textbox. Without
        further customization this results in a fulltext-search in the
        whole grid.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.FullTextSearchGridFilterFactoryTextBox.#ctor">
      <summary>
        Creates a new instance.
      </summary>
    </member>
    <member name="E:GridExtensions.GridFilterFactories.FullTextSearchGridFilterFactoryTextBox.Changed">
      <summary>
        Event for notification that the behaviour of this
        instance has changed.
      </summary>
    </member>
    <member name="E:GridExtensions.GridFilterFactories.FullTextSearchGridFilterFactoryTextBox.GridFilterCreated">
      <summary>
        Event for notification when a <see cref="T:GridExtensions.IGridFilter" /> has been
        created in order to use it in a specific column and to allow
        custom modifications to it.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.FullTextSearchGridFilterFactoryTextBox.BeginGridFilterCreation">
      <summary>
        Notifies this instance that the <see cref="T:GridExtensions.IGridFilter" /> creation process
        is being started.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.FullTextSearchGridFilterFactoryTextBox.EndGridFilterCreation">
      <summary>
        Notifies this instance that the <see cref="T:GridExtensions.IGridFilter" /> creation process
        has finished. After this call all created <see cref="T:GridExtensions.IGridFilter" />s should
        be in a usable state.
      </summary>
    </member>
    <member
      name="M:GridExtensions.GridFilterFactories.FullTextSearchGridFilterFactoryTextBox.CreateGridFilter(System.Data.DataColumn,System.Windows.Forms.DataGridColumnStyle)">
      <summary>
        Creates a new instance of <see cref="T:GridExtensions.GridFilters.TextGridFilter" /> and always
        specifies itself as the filter control. As a result all created filters
        will react upon changes in this instance.
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> for which the filter control should be created.</param>
      <param name="columnStyle">The <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> for which the filter control should be created.</param>
      <returns>A <see cref="T:GridExtensions.GridFilters.TextGridFilter" />.</returns>
    </member>
    <member name="T:GridExtensions.GridFilterFactories.GridFilterFactoryBase">
      <summary>
        Base implementation for <see cref="T:GridExtensions.IGridFilterFactory" /> handling
        most of the common tasks. Inheriting classes only need to override
        <see
          cref="M:GridExtensions.GridFilterFactories.GridFilterFactoryBase.CreateGridFilterInternal(System.Data.DataColumn,System.Windows.Forms.DataGridColumnStyle)" />
        .
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.GridFilterFactoryBase.#ctor">
      <summary>
        Base constructor.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.GridFilterFactoryBase.OnChanged(System.EventArgs)">
      <summary>
        Raises the <see cref="E:GridExtensions.GridFilterFactories.GridFilterFactoryBase.Changed" /> event.
      </summary>
      <param name="eventArgs">Event arguments</param>
    </member>
    <member
      name="M:GridExtensions.GridFilterFactories.GridFilterFactoryBase.OnGridFilterCreated(GridExtensions.GridFilterEventArgs)">
      <summary>
        Raises the <see cref="E:GridExtensions.GridFilterFactories.GridFilterFactoryBase.GridFilterCreated" /> event.
      </summary>
      <param name="eventArgs">Event arguments</param>
    </member>
    <member
      name="M:GridExtensions.GridFilterFactories.GridFilterFactoryBase.CreateGridFilterInternal(System.Data.DataColumn,System.Windows.Forms.DataGridColumnStyle)">
      <summary>
        Must be overridden by implementing classes.
        Should return a valid <see cref="T:GridExtensions.IGridFilter" /> for the specified arguments.
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> for which the filter control should be created.</param>
      <param name="columnStyle">The <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> for which the filter control should be created.</param>
      <returns>A <see cref="T:GridExtensions.IGridFilter" />.</returns>
    </member>
    <member name="E:GridExtensions.GridFilterFactories.GridFilterFactoryBase.Changed">
      <summary>
        Event for notification that the behaviour of this
        instance has changed.
      </summary>
    </member>
    <member name="E:GridExtensions.GridFilterFactories.GridFilterFactoryBase.GridFilterCreated">
      <summary>
        Event for notification when a <see cref="T:GridExtensions.IGridFilter" /> has been
        created in order to use it in a specific column and to allow
        custom modifications to it.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.GridFilterFactoryBase.BeginGridFilterCreation">
      <summary>
        Notifies this instance that the <see cref="T:GridExtensions.IGridFilter" /> creation process
        is being started.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.GridFilterFactoryBase.EndGridFilterCreation">
      <summary>
        Notifies this instance that the <see cref="T:GridExtensions.IGridFilter" /> creation process
        has finished. After this call all created <see cref="T:GridExtensions.IGridFilter" />s should
        be in a usable state.
      </summary>
    </member>
    <member
      name="M:GridExtensions.GridFilterFactories.GridFilterFactoryBase.CreateGridFilter(System.Data.DataColumn,System.Windows.Forms.DataGridColumnStyle)">
      <summary>
        Creates a <see cref="T:GridExtensions.IGridFilter" /> for the specified arguments.
        It calls
        <see
          cref="M:GridExtensions.GridFilterFactories.GridFilterFactoryBase.CreateGridFilterInternal(System.Data.DataColumn,System.Windows.Forms.DataGridColumnStyle)" />
        which must be overridden
        by any implementing class and raises the
        <see cref="E:GridExtensions.GridFilterFactories.GridFilterFactoryBase.GridFilterCreated" />
        afterwards.
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> for which the filter control should be created.</param>
      <param name="columnStyle">The <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> for which the filter control should be created.</param>
      <returns>A <see cref="T:GridExtensions.IGridFilter" />.</returns>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.GridFilterFactoryBase.ToString">
      <summary>
        Returns a textual representation of the class.
      </summary>
      <returns>A textual representation of the class.</returns>
    </member>
    <member name="T:GridExtensions.GridFilterFactories.LayoutedGridFilterFactoryControl">
      <summary>
        Implementation of <see cref="T:GridExtensions.IGridFilterFactory" /> extending another
        <see cref="T:GridExtensions.IGridFilterFactory" /> instance by overriding the default
        placement of the filter controls and placing them in a layouted way
        outside of the grid.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.LayoutedGridFilterFactoryControl.#ctor">
      <summary>
        Creates a new instance.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.LayoutedGridFilterFactoryControl.Dispose(System.Boolean)">
      <summary>
        Die verwendeten Ressourcen bereinigen.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.LayoutedGridFilterFactoryControl.InitializeComponent">
      <summary>
        Erforderliche Methode für die Designerunterstützung.
        Der Inhalt der Methode darf nicht mit dem Code-Editor geändert werden.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterFactories.LayoutedGridFilterFactoryControl.InnerGridFilterFactory">
      <summary>
        Gets and sets the <see cref="T:GridExtensions.IGridFilterFactory" /> instance which should
        be used for creating <see cref="T:GridExtensions.IGridFilter" />s.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterFactories.LayoutedGridFilterFactoryControl.ControlsMinimumWidth">
      <summary>
        Gets and sets the minimum width for the controls. If the panel isn't
        big enough scrollbars will be created.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterFactories.LayoutedGridFilterFactoryControl.HorizontalSpacing">
      <summary>
        Gets and sets the horizontal space between the labels and controls.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterFactories.LayoutedGridFilterFactoryControl.VerticalSpacing">
      <summary>
        Gets and sets the vertical space between the rows.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterFactories.LayoutedGridFilterFactoryControl.RightAlignLabels">
      <summary>
        Gets and sets whether the labels are aligned to the right or to the left.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterFactories.LayoutedGridFilterFactoryControl.ShowEmptyGridFilters">
      <summary>
        Gets and sets whether EmptyGridFilter instances should be shown.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.LayoutedGridFilterFactoryControl.HasChanged">
      <summary>
        Notification method to this instance that the filter
        customization logic has changed and that the filters
        need to be recreated
      </summary>
    </member>
    <member name="E:GridExtensions.GridFilterFactories.LayoutedGridFilterFactoryControl.Changed">
      <summary>
        Event for notification that the behaviour of this
        instance has changed.
      </summary>
    </member>
    <member name="E:GridExtensions.GridFilterFactories.LayoutedGridFilterFactoryControl.GridFilterCreated">
      <summary>
        Event for notification when a <see cref="T:GridExtensions.IGridFilter" /> has been
        created in order to use it in a specific column and to allow
        custom modifications to it.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.LayoutedGridFilterFactoryControl.BeginGridFilterCreation">
      <summary>
        Notifies this instance that the <see cref="T:GridExtensions.IGridFilter" /> creation process
        is being started.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.LayoutedGridFilterFactoryControl.EndGridFilterCreation">
      <summary>
        Notifies this instance that the <see cref="T:GridExtensions.IGridFilter" /> creation process
        has finished. After this call all created <see cref="T:GridExtensions.IGridFilter" />s should
        be in a usable state.
      </summary>
    </member>
    <member
      name="M:GridExtensions.GridFilterFactories.LayoutedGridFilterFactoryControl.CreateGridFilter(System.Data.DataColumn,System.Windows.Forms.DataGridColumnStyle)">
      <summary>
        Creates a new instance of <see cref="T:GridExtensions.IGridFilter" /> by calling the
        <see cref="P:GridExtensions.GridFilterFactories.LayoutedGridFilterFactoryControl.InnerGridFilterFactory" /> and then modifying the default
        placement.
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> for which the filter control should be created.</param>
      <param name="columnStyle">The <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> for which the filter control should be created.</param>
      <returns>A <see cref="T:GridExtensions.IGridFilter" />.</returns>
    </member>
    <member name="T:GridExtensions.GridFilterFactories.LayoutedPanel">
      <summary>
        A panel which positions <see cref="T:System.Windows.Forms.Control" />s with their
        corresponding <see cref="T:System.Windows.Forms.Label" />s in a layouted way.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.LayoutedPanel.#ctor">
      <summary>
        Creates a new instance
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterFactories.LayoutedPanel.ControlsMinimumWidth">
      <summary>
        Gets and sets the minimum width for the controls. If the panel isn't
        big enough scrollbars will be created.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterFactories.LayoutedPanel.HorizontalSpacing">
      <summary>
        Gets and sets the horizontal space between the labels and controls.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterFactories.LayoutedPanel.VerticalSpacing">
      <summary>
        Gets and sets the vertical space between the rows.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilterFactories.LayoutedPanel.RightAlignLabels">
      <summary>
        Gets and sets whether the labels are aligned to the right or to the left.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.LayoutedPanel.Clear">
      <summary>
        Clear the contents of this instance.
      </summary>
    </member>
    <member
      name="M:GridExtensions.GridFilterFactories.LayoutedPanel.Fill(System.Windows.Forms.Label[],System.Windows.Forms.Control[])">
      <summary>
        Fills the instance with the given controls in the two arrays.
        Both arrays must have the same size. Otherwise an <see cref="T:System.ArgumentException" />
        will be thrown.
      </summary>
      <param name="labels">Array with <see cref="T:System.Windows.Forms.Label" /> objects</param>
      <param name="controls">Array with <see cref="T:System.Windows.Forms.Control" /> objects</param>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.LayoutedPanel.OnResize(System.EventArgs)">
      <summary>
        Repositions the contents after the control has been resized.
      </summary>
      <param name="e"></param>
    </member>
    <member name="T:GridExtensions.GridFilterFactories.NullGridFilterFactory">
      <summary>
        <see cref="T:GridExtensions.IGridFilterFactory" /> implementation which creates a
        <see cref="T:GridExtensions.GridFilters.NullGridFilter" /> on every column.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilterFactories.NullGridFilterFactory.#ctor">
      <summary>
        Creates a new instance.
      </summary>
    </member>
    <member
      name="M:GridExtensions.GridFilterFactories.NullGridFilterFactory.CreateGridFilterInternal(System.Data.DataColumn,System.Windows.Forms.DataGridColumnStyle)">
      <summary>
        Return always a <see cref="T:GridExtensions.GridFilters.NullGridFilter" />.
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> for which the filter control should be created.</param>
      <param name="columnStyle">The <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> for which the filter control should be created.</param>
      <returns>A <see cref="T:GridExtensions.IGridFilter" />.</returns>
    </member>
    <member name="T:GridExtensions.LogicalOperators">
      <summary>
        Logical operators which can be used to determine how the filter
        criterias are combined
      </summary>
    </member>
    <member name="F:GridExtensions.LogicalOperators.And">
      <summary>
        Logical And
      </summary>
    </member>
    <member name="F:GridExtensions.LogicalOperators.Or">
      <summary>
        Logical Or
      </summary>
    </member>
    <member name="T:GridExtensions.FilterErrorModes">
      <summary>
        Modes which determine the output generated when an error
        in the builded filter criterias occurs.
      </summary>
    </member>
    <member name="F:GridExtensions.FilterErrorModes.Off">
      <summary>
        No error output at all
      </summary>
    </member>
    <member name="F:GridExtensions.FilterErrorModes.General">
      <summary>
        General error message
      </summary>
    </member>
    <member name="F:GridExtensions.FilterErrorModes.ExceptionMessage">
      <summary>
        Message of the exception that occured
      </summary>
    </member>
    <member name="F:GridExtensions.FilterErrorModes.StackTrace">
      <summary>
        StackTrace of the exception that occured
      </summary>
    </member>
    <member name="F:GridExtensions.FilterErrorModes.All">
      <summary>
        All available output
      </summary>
    </member>
    <member name="T:GridExtensions.GridMode">
      <summary>
        Defines the modes the grid can have.
      </summary>
    </member>
    <member name="F:GridExtensions.GridMode.Filter">
      <summary>
        The shown data is filtered with the filter criterias entered.
      </summary>
    </member>
    <member name="F:GridExtensions.GridMode.Highlight">
      <summary>
        The rows matching the filter criteria are highlighted.
      </summary>
    </member>
    <member name="T:GridExtensions.RefreshMode">
      <summary>
        Modes which determine when the filter criteria get automatically
        applied to the contents of the grid.
      </summary>
    </member>
    <member name="F:GridExtensions.RefreshMode.OnInput">
      <summary>
        Filters are regenerated on every user input.
      </summary>
    </member>
    <member name="F:GridExtensions.RefreshMode.OnEnter">
      <summary>
        Filters are regenerated whenever the user presses Enter while
        the focus is in one of the filter controls.
      </summary>
    </member>
    <member name="F:GridExtensions.RefreshMode.OnLeave">
      <summary>
        Filters are regenerated whenever one of the filter controls
        looses input focus.
      </summary>
    </member>
    <member name="F:GridExtensions.RefreshMode.OnEnterOrLeave">
      <summary>
        Filters are regenerated whenever one of the filter controls
        looses input focus or the user presses Enter while
        the focus is in one of the filter controls.
      </summary>
    </member>
    <member name="F:GridExtensions.RefreshMode.Off">
      <summary>
        No automatic filter generation.
      </summary>
    </member>
    <member name="T:GridExtensions.GridFiltersControl">
      <summary>
        A control where all controls all placed which are necessary for
        extending a grid for filtering.
      </summary>
    </member>
    <member name="E:GridExtensions.GridFiltersControl.AfterFiltersChanged">
      <summary>
        Event, which gets fired whenever the filter criteria has been changed.
      </summary>
    </member>
    <member name="E:GridExtensions.GridFiltersControl.BeforeFiltersChanging">
      <summary>
        Event, which gets fired whenever the filter criteria are going to be changed.
      </summary>
    </member>
    <member name="E:GridExtensions.GridFiltersControl.GridFilterBound">
      <summary>
        Event, which gets fired whenever an <see cref="T:GridExtensions.IGridFilter" /> has been bound
        and thus added to this instance.
      </summary>
    </member>
    <member name="E:GridExtensions.GridFiltersControl.GridFilterUnbound">
      <summary>
        Event, which gets fired whenever an <see cref="T:GridExtensions.IGridFilter" /> has been unbound
        and thus removed to this instance.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFiltersControl.#ctor">
      <summary>
        Creates a new instance
      </summary>
    </member>
    <member name="M:GridExtensions.GridFiltersControl.InitializeComponent">
      <summary>
        Erforderliche Methode für die Designerunterstützung.
        Der Inhalt der Methode darf nicht mit dem Code-Editor geändert werden.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFiltersControl.Dispose(System.Boolean)">
      <summary>
        Die verwendeten Ressourcen bereinigen.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFiltersControl.OnResize(System.EventArgs)">
      <summary>
        Initiates recalculation for the positions of the filter GUI elements.
      </summary>
      <param name="e">Event data</param>
    </member>
    <member name="M:GridExtensions.GridFiltersControl.OnRightToLeftChanged(System.EventArgs)">
      <summary>
        Initiates recalculation for the positions of the filter GUI elements.
      </summary>
      <param name="e">Event data</param>
    </member>
    <member name="P:GridExtensions.GridFiltersControl.GridMode">
      <summary>
        Gets and sets the mode for the grid.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFiltersControl.GridExtension">
      <summary>
        Gets and sets the <see cref="T:GridExtensions.IGridExtension" /> instance to use.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFiltersControl.KeepFilters">
      <summary>
        Gets and sets whether filters are kept while switching between different tables.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFiltersControl.AutoRefreshMode">
      <summary>
        Gets and sets whether the filter criteria is automatically refreshed when
        changes are made to the filter controls. If set to false then a call to
        <see cref="M:GridExtensions.GridFiltersControl.RefreshFilters" /> is needed to manually refresh the criteria.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFiltersControl.FilterText">
      <summary>
        Gets and sets the text for the filter label.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFiltersControl.FilterFactory">
      <summary>
        Gets and sets the <see cref="T:GridExtensions.IGridFilterFactory" /> used to generate the filter GUI.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFiltersControl.Operator">
      <summary>
        The selected operator to combine the filter criterias.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFiltersControl.FilterTextVisible">
      <summary>
        Gets and sets whether the filter label should be visible.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFiltersControl.MessageErrorMode">
      <summary>
        Gets and sets what information is showed to the user
        if an error in the builded filter criterias occurs.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFiltersControl.ConsoleErrorMode">
      <summary>
        Gets and sets what information is showed to the user
        if an error in the builded filter criterias occurs.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFiltersControl.BaseFilters">
      <summary>
        Gets a modifyable collection which maps <see cref="P:System.Data.DataTable.TableName" />s
        to base filter strings which are applied in front of the automatically
        created filter.
      </summary>
      <remarks>
        The grid contents is not automatically refreshed when modifying this
        collection. A call to <see cref="M:GridExtensions.GridFiltersControl.RefreshFilters" /> is needed for this.
      </remarks>
    </member>
    <member name="P:GridExtensions.GridFiltersControl.BaseFilterOperator">
      <summary>
        Gets or sets which operator should be used to combine the base filter
        with the automatically created filters.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFiltersControl.BaseFilterEnabled">
      <summary>
        Gets or sets whether base filters should be used when refreshing
        the filter criteria. Setting it to false will disable the functionality
        while still keeping the base filter strings in the
        <see cref="P:GridExtensions.GridFiltersControl.BaseFilters" />
        collection intact.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFiltersControl.CurrentTableBaseFilter">
      <summary>
        Gets or sets the currently used base filter. Internally it adjusts the
        <see cref="P:GridExtensions.GridFiltersControl.BaseFilters" /> collection with the given value and the current
        <see cref="P:System.Data.DataTable.TableName" /> and also initiates a refresh.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFiltersControl.ClearFilters">
      <summary>
        Clears all filters to initial state.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFiltersControl.SetFilters(System.String[])">
      <summary>
        Sets all filters to the specified values.
        The values must be in order of the column styles in the current view.
        This function should normally be used with data previously coming
        from the <see cref="M:GridExtensions.GridFiltersControl.GetFilters" /> function.
      </summary>
      <param name="filters">filters to set</param>
    </member>
    <member name="M:GridExtensions.GridFiltersControl.GetFilters">
      <summary>
        Gets all filters currently set
      </summary>
      <returns></returns>
    </member>
    <member name="M:GridExtensions.GridFiltersControl.RefreshFilters">
      <summary>
        Refreshes the filter criteria to match the current contents of the associated
        filter controls.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFiltersControl.GetGridFilters">
      <summary>
        Gets all currently set <see cref="T:GridExtensions.IGridFilter" />s.
      </summary>
      <returns>Collection of <see cref="T:GridExtensions.IGridFilter" />s.</returns>
    </member>
    <member name="M:GridExtensions.GridFiltersControl.OnBeforeFiltersChanging(System.EventArgs)">
      <summary>
        Raises the <see cref="E:GridExtensions.GridFiltersControl.BeforeFiltersChanging" /> event.
      </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:GridExtensions.GridFiltersControl.OnAfterFiltersChanged(System.EventArgs)">
      <summary>
        Raises the <see cref="E:GridExtensions.GridFiltersControl.AfterFiltersChanged" /> event.
      </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:GridExtensions.GridFiltersControl.OnGridFilterBound(GridExtensions.GridFilterEventArgs)">
      <summary>
        Raises the <see cref="E:GridExtensions.GridFiltersControl.GridFilterBound" /> event.
      </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:GridExtensions.GridFiltersControl.OnGridFilterUnbound(GridExtensions.GridFilterEventArgs)">
      <summary>
        Raises the <see cref="E:GridExtensions.GridFiltersControl.GridFilterUnbound" /> event.
      </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:GridExtensions.GridFiltersControl.RecreateGridFilters">
      <summary>
        Initiates a recalculation of the needed filter GUI elements and their positions.
      </summary>
    </member>
    <member name="T:GridExtensions.GridFilters.BoolGridFilter">
      <summary>
        A <see cref="T:GridExtensions.IGridFilter" /> implementation for filtering boolean columns
        with a <see cref="T:System.Windows.Forms.CheckBox" /> to control the filter.
        It allows three states:
        In intermediate state no filter will be set.
        In checked state the filter will show only true values.
        In unchecked state the filter will only show false values.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.BoolGridFilter.#ctor">
      <summary>
        Creates a new instance
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.BoolGridFilter.#ctor(System.Windows.Forms.CheckBox)">
      <summary>
        Creates a new instance with <see cref="P:GridExtensions.GridFilters.GridFilterBase.UseCustomFilterPlacement" />
        set to true.
      </summary>
      <param name="checkBox">
        A <see cref="T:System.Windows.Forms.CheckBox" /> instance which
        should be used by the filter.
      </param>
    </member>
    <member name="P:GridExtensions.GridFilters.BoolGridFilter.CheckState">
      <summary>
        Gets or sets the current state of the contained <see cref="T:System.Windows.Forms.CheckBox" />.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.BoolGridFilter.FilterControl">
      <summary>
        The <see cref="T:System.Windows.Forms.CheckBox" /> for the GUI.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.BoolGridFilter.HasFilter">
      <summary>
        Gets whether a filter is set.
        True, if the <see cref="T:System.Windows.Forms.CheckBox" /> is not intermediate.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.BoolGridFilter.GetFilter(System.String)">
      <summary>
        Gets a simple boolean filter criteria in string representation
      </summary>
      <param name="columnName">
        The name of the column for which the criteria should be generated.
      </param>
      <returns>a string representing the current filter criteria</returns>
    </member>
    <member name="M:GridExtensions.GridFilters.BoolGridFilter.SetFilter(System.String)">
      <summary>
        Sets a string which a a previous result of
        <see cref="M:GridExtensions.GridFilters.BoolGridFilter.GetFilter(System.String)" />
        in order to configure the <see cref="P:GridExtensions.GridFilters.BoolGridFilter.FilterControl" /> to match the
        given filter criteria.
      </summary>
      <param name="filter">filter criteria</param>
      <returns></returns>
    </member>
    <member name="M:GridExtensions.GridFilters.BoolGridFilter.Clear">
      <summary>
        Clears the filter to its initial state.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.BoolGridFilter.Dispose">
      <summary>
        Cleans up
      </summary>
    </member>
    <member name="T:GridExtensions.GridFilters.DateGridFilter">
      <summary>
        A <see cref="T:GridExtensions.IGridFilter" /> implementation for filtering date columns
        with a <see cref="T:GridExtensions.GridFilters.DateGridFilterControl" /> to control the filter.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.DateGridFilter.#ctor">
      <summary>
        Creates a new instance with <see cref="P:GridExtensions.GridFilters.GridFilterBase.UseCustomFilterPlacement" />
        and <see cref="P:GridExtensions.GridFilters.DateGridFilter.ShowInBetweenOperator" /> set to false.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.DateGridFilter.#ctor(System.Boolean)">
      <summary>
        Creates a new instance with <see cref="P:GridExtensions.GridFilters.GridFilterBase.UseCustomFilterPlacement" />
        set to false.
      </summary>
      <param name="showInBetweenOperator">Determines whether the 'in between' operator is available.</param>
    </member>
    <member name="M:GridExtensions.GridFilters.DateGridFilter.#ctor(GridExtensions.GridFilters.DateGridFilterControl)">
      <summary>
        Creates a new instance with <see cref="P:GridExtensions.GridFilters.GridFilterBase.UseCustomFilterPlacement" />
        set to true and not having the 'in between' operator.
      </summary>
      <param name="dateGridFilterControl">
        A <see cref="T:GridExtensions.GridFilters.DateGridFilterControl" />
        instance which should be used by the filter.
      </param>
    </member>
    <member
      name="M:GridExtensions.GridFilters.DateGridFilter.#ctor(GridExtensions.GridFilters.DateGridFilterControl,System.Boolean)">
      <summary>
        Creates a new instance with <see cref="P:GridExtensions.GridFilters.GridFilterBase.UseCustomFilterPlacement" />
        set to true.
      </summary>
      <param name="dateGridFilterControl">
        A <see cref="T:GridExtensions.GridFilters.DateGridFilterControl" />
        instance which should be used by the filter.
      </param>
      <param name="showInBetweenOperator">Determines whether the 'in between' operator is available.</param>
    </member>
    <member name="P:GridExtensions.GridFilters.DateGridFilter.ShowInBetweenOperator">
      <summary>
        Sets or gets whether the 'in between' operator should be available.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.DateGridFilter.Date1">
      <summary>
        Gets or sets the current date of the first contained <see cref="T:System.Windows.Forms.DateTimePicker" />.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.DateGridFilter.Date2">
      <summary>
        Gets or sets the current date of the second contained <see cref="T:System.Windows.Forms.DateTimePicker" />.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.DateGridFilter.Operator">
      <summary>
        Gets or sets the current operator of the contained <see cref="T:System.Windows.Forms.ComboBox" />.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.DateGridFilter.FilterControl">
      <summary>
        Returns the instance itsself, which contains a <see cref="T:System.Windows.Forms.DateTimePicker" />
        and a <see cref="T:System.Windows.Forms.ComboBox" /> to adjust the filter.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.DateGridFilter.HasFilter">
      <summary>
        Gets whether a filter is set.
        True, if the <see cref="T:System.Windows.Forms.ComboBox" /> is not empty.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.DateGridFilter.GetFilter(System.String)">
      <summary>
        Gets a filter with the current criteria in string representation.
      </summary>
      <param name="columnName">
        The name of the column for which the criteria should be generated.
      </param>
      <returns>A string representing the current filter criteria</returns>
    </member>
    <member name="M:GridExtensions.GridFilters.DateGridFilter.SetFilter(System.String)">
      <summary>
        Sets a string which a a previous result of
        <see cref="M:GridExtensions.GridFilters.DateGridFilter.GetFilter(System.String)" />
        in order to configure the <see cref="P:GridExtensions.GridFilters.DateGridFilter.FilterControl" /> to match the
        given filter criteria.
      </summary>
      <param name="filter">filter criteria</param>
      <returns></returns>
    </member>
    <member name="M:GridExtensions.GridFilters.DateGridFilter.Clear">
      <summary>
        Clears the filter to its initial state.
      </summary>
    </member>
    <member name="T:GridExtensions.GridFilters.DateGridFilterControl">
      <summary>
        A control with a <see cref="P:GridExtensions.GridFilters.DateGridFilterControl.ComboBox" /> and two
        <see cref="T:System.Windows.Forms.DateTimePicker" />s
        needed in the <see cref="T:GridExtensions.GridFilters.DateGridFilter" />.
      </summary>
    </member>
    <member name="E:GridExtensions.GridFilters.DateGridFilterControl.Changed">
      <summary>
        Event firing when either the <see cref="P:GridExtensions.GridFilters.DateGridFilterControl.ComboBox" /> or
        the <see cref="T:System.Windows.Forms.DateTimePicker" /> has changed.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.DateGridFilterControl.#ctor">
      <summary>
        Creates a new instance
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.DateGridFilterControl.Dispose(System.Boolean)">
      <summary>
        Cleans up.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.DateGridFilterControl.OnResize(System.EventArgs)">
      <summary>
        Resizes the contained <see cref="T:System.Windows.Forms.DateTimePicker" />s so that they
        have the same width.
      </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:GridExtensions.GridFilters.DateGridFilterControl.InitializeComponent">
      <summary>
        Erforderliche Methode für die Designerunterstützung.
        Der Inhalt der Methode darf nicht mit dem Code-Editor geändert werden.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.DateGridFilterControl.DateTimePicker1">
      <summary>
        Gets the first contained <see cref="T:System.Windows.Forms.DateTimePicker" /> instance.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.DateGridFilterControl.DateTimePicker2">
      <summary>
        Gets the second contained <see cref="T:System.Windows.Forms.DateTimePicker" /> instance.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.DateGridFilterControl.ComboBox">
      <summary>
        Gets the contained <see cref="P:GridExtensions.GridFilters.DateGridFilterControl.ComboBox" /> instance.
      </summary>
    </member>
    <member name="T:GridExtensions.GridFilters.DistinctValuesGridFilter">
      <summary>
        A <see cref="T:GridExtensions.IGridFilter" /> implementation for columns with a
        <see cref="T:System.Windows.Forms.ComboBox" />
        containing all values found within the column.
      </summary>
    </member>
    <member name="T:GridExtensions.GridFilters.DistinctValuesGridFilter.SpecialValue">
      <summary>
        Defines special values which can be contained in the <see cref="T:System.Windows.Forms.ComboBox" />
        of a <see cref="T:GridExtensions.GridFilters.DistinctValuesGridFilter" />.
      </summary>
    </member>
    <member name="F:GridExtensions.GridFilters.DistinctValuesGridFilter.SpecialValue.NoFilter">
      <summary>
        The special value meaning 'No filtering'.
      </summary>
    </member>
    <member name="F:GridExtensions.GridFilters.DistinctValuesGridFilter.SpecialValue.NullFilter">
      <summary>
        The special value meaning 'Filter null values'.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.DistinctValuesGridFilter.SpecialValue.ToString">
      <summary>
        Gets a textual representation.
      </summary>
      <returns></returns>
    </member>
    <member name="M:GridExtensions.GridFilters.DistinctValuesGridFilter.#ctor(System.Data.DataColumn)">
      <summary>
        Creates a new instance.
      </summary>
      <param name="column">Column where the values list should be generated from.</param>
    </member>
    <member
      name="M:GridExtensions.GridFilters.DistinctValuesGridFilter.#ctor(System.Data.DataColumn,System.Windows.Forms.ComboBox)">
      <summary>
        Creates a new instance.
      </summary>
      <param name="column">Column where the values list should be generated from.</param>
      <param name="comboBox">Control which should be used to display the values.</param>
    </member>
    <member name="M:GridExtensions.GridFilters.DistinctValuesGridFilter.#ctor(System.String[],System.Boolean)">
      <summary>
        Creates a new instance.
      </summary>
      <param name="values">The list of values to be displayed.</param>
      <param name="containsDbNull">Indicates whether the (null) entry should be displayed or not.</param>
    </member>
    <member
      name="M:GridExtensions.GridFilters.DistinctValuesGridFilter.#ctor(System.String[],System.Boolean,System.Windows.Forms.ComboBox)">
      <summary>
        Creates a new instance.
      </summary>
      <param name="values">The list of values to be displayed.</param>
      <param name="containsDbNull">Indicates whether the (null) entry should be displayed or not.</param>
      <param name="comboBox">Control which should be used to display the values.</param>
    </member>
    <member name="P:GridExtensions.GridFilters.DistinctValuesGridFilter.Values">
      <summary>
        Gets all values contained in the <see cref="T:System.Windows.Forms.ComboBox" />.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.DistinctValuesGridFilter.CurrentValue">
      <summary>
        Gets or sets the current value of the contained <see cref="T:System.Windows.Forms.ComboBox" />.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.DistinctValuesGridFilter.FilterControl">
      <summary>
        The <see cref="T:System.Windows.Forms.ComboBox" /> for the GUI.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.DistinctValuesGridFilter.HasFilter">
      <summary>
        Gets whether a filter is set.
        True, if the text of the <see cref="T:System.Windows.Forms.ComboBox" /> is not empty.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.DistinctValuesGridFilter.GetFilter(System.String)">
      <summary>
        Gets a filter with a criteria in string representation.
      </summary>
      <param name="columnName">
        The name of the column for which the criteria should be generated.
      </param>
      <returns>a string representing the current filter criteria</returns>
    </member>
    <member name="M:GridExtensions.GridFilters.DistinctValuesGridFilter.SetFilter(System.String)">
      <summary>
        Sets a string which a a previous result of
        <see cref="M:GridExtensions.GridFilters.DistinctValuesGridFilter.GetFilter(System.String)" />
        in order to configure the <see cref="P:GridExtensions.GridFilters.DistinctValuesGridFilter.FilterControl" /> to match the
        given filter criteria.
      </summary>
      <param name="filter">filter criteria</param>
      <returns></returns>
    </member>
    <member name="M:GridExtensions.GridFilters.DistinctValuesGridFilter.Clear">
      <summary>
        Clears the filter to its initial state.
      </summary>
    </member>
    <member
      name="M:GridExtensions.GridFilters.DistinctValuesGridFilter.GetDistinctValues(System.Data.DataColumn,System.Boolean@)">
      <summary>
        Gets all values found in the specified columns as a string array.
      </summary>
      <param name="column">Column to search for values.</param>
      <param name="containsDbNull">Indicates whether the (null) entry is contained in the column or not.</param>
      <returns>Array with different values.</returns>
    </member>
    <member
      name="M:GridExtensions.GridFilters.DistinctValuesGridFilter.GetDistinctValues(System.Data.DataColumn,System.Int32,System.Boolean@)">
      <summary>
        Gets all values found in the specified columns as a string array
        limited in size to the value specified. If this value is exceeded
        than null will be returned instead.
      </summary>
      <param name="column">Column to search for values.</param>
      <param name="maximumValues">Value indicating how many different values should be fetched at maximum.</param>
      <param name="containsDbNull">Indicates whether the (null) entry is contained in the column or not.</param>
      <returns>Array with different values, or Null.</returns>
    </member>
    <member name="M:GridExtensions.GridFilters.DistinctValuesGridFilter.Dispose">
      <summary>
        Cleans up
      </summary>
    </member>
    <member name="T:GridExtensions.GridFilters.EmptyGridFilter">
      <summary>
        A dummy <see cref="T:GridExtensions.IGridFilter" /> implementation, which does no filtering.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.EmptyGridFilter.#ctor">
      <summary>
        Creates a new instance.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.EmptyGridFilter.FilterControl">
      <summary>
        Gets an empty control.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.EmptyGridFilter.HasFilter">
      <summary>
        Always return false.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.EmptyGridFilter.GetFilter(System.String)">
      <summary>
        Always returns an empty string.
      </summary>
      <param name="columnName">Not necessary.</param>
      <returns>An empty string.</returns>
    </member>
    <member name="M:GridExtensions.GridFilters.EmptyGridFilter.SetFilter(System.String)">
      <summary>
        Does nothing.
      </summary>
      <param name="filter">filter criteria</param>
      <returns></returns>
    </member>
    <member name="M:GridExtensions.GridFilters.EmptyGridFilter.Clear">
      <summary>
        Clears the filter to its initial state.
      </summary>
    </member>
    <member name="T:GridExtensions.GridFilters.EnumerationGridFilter">
      <summary>
        A <see cref="T:GridExtensions.IGridFilter" /> implementation for filtering any columns
        with enmuration types. A <see cref="T:System.Windows.Forms.ComboBox" /> will show all
        possible enumeration values from which the user can select one.
      </summary>
    </member>
    <member
      name="M:GridExtensions.GridFilters.EnumerationGridFilter.#ctor(GridExtensions.GridFilters.EnumerationSources.IEnumerationSource)">
      <summary>
        Creates a new instance.
      </summary>
      <param name="enumerationSource">
        Source defining what values should
        be displayed and how they are filtered.
      </param>
    </member>
    <member
      name="M:GridExtensions.GridFilters.EnumerationGridFilter.#ctor(GridExtensions.GridFilters.EnumerationSources.IEnumerationSource,System.Windows.Forms.ComboBox)">
      <summary>
        Creates a new instance.
      </summary>
      <param name="enumerationSource">
        Source defining what values should
        be displayed and how they are filtered.
      </param>
      <param name="comboBox">Control which should be used to display the enumeration values.</param>
    </member>
    <member name="M:GridExtensions.GridFilters.EnumerationGridFilter.#ctor(System.Type)">
      <summary>
        Creates a new instance.
      </summary>
      <param name="dataType">
        <see cref="T:System.Type" /> of the enumeration which values
        should be displayed
      </param>
    </member>
    <member name="P:GridExtensions.GridFilters.EnumerationGridFilter.Value">
      <summary>
        Gets or sets the current value of the contained <see cref="T:System.Windows.Forms.ComboBox" />.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.EnumerationGridFilter.FilterControl">
      <summary>
        The <see cref="T:System.Windows.Forms.ComboBox" /> for the GUI.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.EnumerationGridFilter.HasFilter">
      <summary>
        Gets whether a filter is set.
        True, if the text of the <see cref="T:System.Windows.Forms.ComboBox" /> is not empty.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.EnumerationGridFilter.GetFilter(System.String)">
      <summary>
        Gets a filter with a criteria in string representation.
      </summary>
      <param name="columnName">
        The name of the column for which the criteria should be generated.
      </param>
      <returns>a string representing the current filter criteria</returns>
    </member>
    <member name="M:GridExtensions.GridFilters.EnumerationGridFilter.SetFilter(System.String)">
      <summary>
        Sets a string which a a previous result of
        <see cref="M:GridExtensions.GridFilters.EnumerationGridFilter.GetFilter(System.String)" />
        in order to configure the <see cref="P:GridExtensions.GridFilters.EnumerationGridFilter.FilterControl" /> to match the
        given filter criteria.
      </summary>
      <param name="filter">filter criteria</param>
      <returns></returns>
    </member>
    <member name="M:GridExtensions.GridFilters.EnumerationGridFilter.Clear">
      <summary>
        Clears the filter to its initial state.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.EnumerationGridFilter.Dispose">
      <summary>
        Cleans up
      </summary>
    </member>
    <member name="T:GridExtensions.GridFilters.EnumerationSources.IEnumerationSource">
      <summary>
        Interface defining a data source for the <see cref="T:GridExtensions.GridFilters.EnumerationGridFilter" />.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.EnumerationSources.IEnumerationSource.AllValues">
      <summary>
        Gets all values which should be displayed.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.EnumerationSources.IEnumerationSource.GetFilterFromValue(System.Object)">
      <summary>
        Build the filter criteria from the given input.
      </summary>
      <param name="value">The selected value for which the criteria is created.</param>
      <returns>A <see cref="T:System.String" /> representing the criteria.</returns>
    </member>
    <member name="M:GridExtensions.GridFilters.EnumerationSources.IEnumerationSource.GetValueFromFilter(System.String)">
      <summary>
        Gets the object value for a specified filter.
      </summary>
      <param name="filter">The filter value to be searched</param>
      <returns>object value for the specified filter</returns>
    </member>
    <member name="T:GridExtensions.GridFilters.EnumerationSources.IntStringMapEnumerationSource">
      <summary>
        <see cref="T:GridExtensions.GridFilters.EnumerationSources.IEnumerationSource" /> implementation which supports userdefined
        matching between <see cref="T:System.Int32" /> values in the datasource and <see cref="T:System.String" />
        values which should be displayed in the filter.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.EnumerationSources.IntStringMapEnumerationSource.#ctor">
      <summary>
        Creates a new instance with no mapping.
      </summary>
    </member>
    <member
      name="M:GridExtensions.GridFilters.EnumerationSources.IntStringMapEnumerationSource.#ctor(System.Int32[],System.String[])">
      <summary>
        Creates a new instance mapping the given <see cref="T:System.Int32" /> values to
        the given <see cref="T:System.String" /> values.
      </summary>
      <param name="integerValues"></param>
      <param name="stringValues"></param>
    </member>
    <member
      name="M:GridExtensions.GridFilters.EnumerationSources.IntStringMapEnumerationSource.AddMapping(System.Int32,System.String)">
      <summary>
        Adds a mapping
      </summary>
      <param name="integerValue"></param>
      <param name="stringValue"></param>
    </member>
    <member
      name="M:GridExtensions.GridFilters.EnumerationSources.IntStringMapEnumerationSource.RemoveMapping(System.String)">
      <summary>
        Removes a mapping
      </summary>
      <param name="stringValue"></param>
    </member>
    <member name="P:GridExtensions.GridFilters.EnumerationSources.IntStringMapEnumerationSource.AllValues">
      <summary>
        Gets all values which should be displayed.
      </summary>
    </member>
    <member
      name="M:GridExtensions.GridFilters.EnumerationSources.IntStringMapEnumerationSource.GetFilterFromValue(System.Object)">
      <summary>
        Build the filter criteria from the given input.
      </summary>
      <param name="value">The selected value for which the criteria is created.</param>
      <returns>A <see cref="T:System.String" /> representing the criteria.</returns>
    </member>
    <member
      name="M:GridExtensions.GridFilters.EnumerationSources.IntStringMapEnumerationSource.GetValueFromFilter(System.String)">
      <summary>
        Gets the object value for a specified filter.
      </summary>
      <param name="filter">The filter value to be searched</param>
      <returns>object value for the specified filter</returns>
    </member>
    <member name="T:GridExtensions.GridFilters.EnumerationSources.TypeEnumerationSource">
      <summary>
        <see cref="T:GridExtensions.GridFilters.EnumerationSources.IEnumerationSource" /> implementation which gets its values from
        an enumeration type via reflection.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.EnumerationSources.TypeEnumerationSource.#ctor(System.Type)">
      <summary>
        Creates a new instance.
      </summary>
      <param name="dataType">Enumeration type</param>
    </member>
    <member name="P:GridExtensions.GridFilters.EnumerationSources.TypeEnumerationSource.AllValues">
      <summary>
        Gets all values which should be displayed.
      </summary>
    </member>
    <member
      name="M:GridExtensions.GridFilters.EnumerationSources.TypeEnumerationSource.GetFilterFromValue(System.Object)">
      <summary>
        Build the filter criteria from the given input.
      </summary>
      <param name="value">The selected value for which the criteria is created.</param>
      <returns>A <see cref="T:System.String" /> representing the criteria.</returns>
    </member>
    <member
      name="M:GridExtensions.GridFilters.EnumerationSources.TypeEnumerationSource.GetValueFromFilter(System.String)">
      <summary>
        Gets the object value for a specified filter.
      </summary>
      <param name="filter">The filter value to be searched</param>
      <returns>object value for the specified filter</returns>
    </member>
    <member name="T:GridExtensions.GridFilters.GridFilterBase">
      <summary>
        Base class for easier <see cref="T:GridExtensions.IGridFilter" /> implementation.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.GridFilterBase.#ctor(System.Boolean)">
      <summary>
        Base constructor.
      </summary>
      <param name="useCustomFilterPlacement">
        False, if the filter control should be
        placed within the grid, otherwise true.
      </param>
    </member>
    <member name="E:GridExtensions.GridFilters.GridFilterBase.Changed">
      <summary>
        Event for notification that the filter criteria for this
        instance has changed.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.GridFilterBase.FilterControl">
      <summary>
        The control which contains the GUI elements for the filter
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.GridFilterBase.UseCustomFilterPlacement">
      <summary>
        Specifies whether the control is placed automatically or not.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.GridFilterBase.HasFilter">
      <summary>
        Gets whether a filter is currently set
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.GridFilterBase.GetFilter(System.String)">
      <summary>
        Gets a string representing the current filter.
        This must be a valid expression understandable by the
        <see cref="T:System.Data.DataView" /> class's property <see cref="P:System.Data.DataView.RowFilter" />.
      </summary>
      <param name="columnName">
        The name of the column for which the criteria should be generated.
      </param>
      <returns>a string representing the current filter criteria</returns>
    </member>
    <member name="M:GridExtensions.GridFilters.GridFilterBase.SetFilter(System.String)">
      <summary>
        Sets a string which a a previous result of
        <see cref="M:GridExtensions.GridFilters.GridFilterBase.GetFilter(System.String)" />
        in order to configure the <see cref="P:GridExtensions.GridFilters.GridFilterBase.FilterControl" /> to match the
        given filter criteria.
      </summary>
      <param name="filter">filter criteria</param>
      <returns></returns>
    </member>
    <member name="M:GridExtensions.GridFilters.GridFilterBase.Clear">
      <summary>
        Clears the filter to its initial state.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.GridFilterBase.OnChanged">
      <summary>
        Fires the <see cref="E:GridExtensions.GridFilters.GridFilterBase.Changed" /> event.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.GridFilterBase.Dispose">
      <summary>
        Frees the resources of this instance.
        Not needed in the base implementation but probably a good thing
        in deriving classes.
      </summary>
    </member>
    <member name="T:GridExtensions.GridFilters.NullGridFilter">
      <summary>
        A <see cref="T:GridExtensions.IGridFilter" /> implementation for filtering columns
        with a <see cref="T:System.Windows.Forms.CheckBox" /> to control the filter.
        It allows three states:
        In intermediate state no filter will be set.
        In checked state the filter will show only values which are not null.
        In unchecked state the filter will only show values which are null.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.NullGridFilter.#ctor">
      <summary>
        Creates a new instance
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.NullGridFilter.#ctor(System.Windows.Forms.CheckBox)">
      <summary>
        Creates a new instance with <see cref="P:GridExtensions.GridFilters.GridFilterBase.UseCustomFilterPlacement" />
        set to true.
      </summary>
      <param name="checkBox">
        A <see cref="T:System.Windows.Forms.CheckBox" /> instance which
        should be used by the filter.
      </param>
    </member>
    <member name="P:GridExtensions.GridFilters.NullGridFilter.CheckState">
      <summary>
        Gets or sets the current state of the contained <see cref="T:System.Windows.Forms.CheckBox" />.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.NullGridFilter.FilterControl">
      <summary>
        The <see cref="T:System.Windows.Forms.CheckBox" /> for the GUI.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.NullGridFilter.HasFilter">
      <summary>
        Gets whether a filter is set.
        True, if the <see cref="T:System.Windows.Forms.CheckBox" /> is not intermediate.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.NullGridFilter.GetFilter(System.String)">
      <summary>
        Gets a simple boolean filter criteria in string representation
      </summary>
      <param name="columnName">
        The name of the column for which the criteria should be generated.
      </param>
      <returns>a string representing the current filter criteria</returns>
    </member>
    <member name="M:GridExtensions.GridFilters.NullGridFilter.SetFilter(System.String)">
      <summary>
        Sets a string which a a previous result of
        <see cref="M:GridExtensions.GridFilters.NullGridFilter.GetFilter(System.String)" />
        in order to configure the <see cref="P:GridExtensions.GridFilters.NullGridFilter.FilterControl" /> to match the
        given filter criteria.
      </summary>
      <param name="filter">filter criteria</param>
      <returns></returns>
    </member>
    <member name="M:GridExtensions.GridFilters.NullGridFilter.Clear">
      <summary>
        Clears the filter to its initial state.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.NullGridFilter.Dispose">
      <summary>
        Cleans up
      </summary>
    </member>
    <member name="T:GridExtensions.GridFilters.NumericGridFilter">
      <summary>
        A <see cref="T:GridExtensions.IGridFilter" /> implementation for filtering numeric columns
        with a <see cref="T:GridExtensions.GridFilters.NumericGridFilterControl" /> to control the filter.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.NumericGridFilter.#ctor">
      <summary>
        Creates a new instance with <see cref="P:GridExtensions.GridFilters.GridFilterBase.UseCustomFilterPlacement" />
        and <see cref="P:GridExtensions.GridFilters.NumericGridFilter.ShowInBetweenOperator" /> set to false.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.NumericGridFilter.#ctor(System.Boolean)">
      <summary>
        Creates a new instance with <see cref="P:GridExtensions.GridFilters.GridFilterBase.UseCustomFilterPlacement" />
        set to false.
      </summary>
      <param name="showInBetweenOperator">Determines whether the 'in between' operator is available.</param>
    </member>
    <member
      name="M:GridExtensions.GridFilters.NumericGridFilter.#ctor(GridExtensions.GridFilters.NumericGridFilterControl)">
      <summary>
        Creates a new instance with <see cref="P:GridExtensions.GridFilters.GridFilterBase.UseCustomFilterPlacement" />
        set to true and not having the 'in between' operator.
      </summary>
      <param name="numericGridFilterControl">
        A <see cref="T:GridExtensions.GridFilters.NumericGridFilterControl" />
        instance which should be used by the filter.
      </param>
    </member>
    <member
      name="M:GridExtensions.GridFilters.NumericGridFilter.#ctor(GridExtensions.GridFilters.NumericGridFilterControl,System.Boolean)">
      <summary>
        Creates a new instance with <see cref="P:GridExtensions.GridFilters.GridFilterBase.UseCustomFilterPlacement" />
        set to true and not having the 'in between' operator.
      </summary>
      <param name="numericGridFilterControl">
        A <see cref="T:GridExtensions.GridFilters.NumericGridFilterControl" />
        instance which should be used by the filter.
      </param>
      <param name="showInBetweenOperator">Determines whether the 'in between' operator is available.</param>
    </member>
    <member name="P:GridExtensions.GridFilters.NumericGridFilter.ShowInBetweenOperator">
      <summary>
        Sets or gets whether the 'in between' operator should be available.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.NumericGridFilter.Text1">
      <summary>
        Gets or sets the current text of the first contained <see cref="T:System.Windows.Forms.TextBox" />.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.NumericGridFilter.Text2">
      <summary>
        Gets or sets the current text of the second contained <see cref="T:System.Windows.Forms.TextBox" />.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.NumericGridFilter.Operator">
      <summary>
        Gets or sets the current operator of the contained <see cref="T:System.Windows.Forms.ComboBox" />.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.NumericGridFilter.FilterControl">
      <summary>
        Returns the instance itsself, which contains a <see cref="T:System.Windows.Forms.TextBox" />
        and a <see cref="T:System.Windows.Forms.ComboBox" /> to adjust the filter.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.NumericGridFilter.HasFilter">
      <summary>
        Gets whether a filter is set.
        True, if the text of the <see cref="T:System.Windows.Forms.TextBox" /> is not empty.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.NumericGridFilter.GetFilter(System.String)">
      <summary>
        Gets a filter with the current criteria in string representation.
        If operator '*' is set in the <see cref="T:System.Windows.Forms.ComboBox" /> a text criteria
        with like will be created.
        All other operators will do numerical comparisons. If no valid number
        is entered then all rows will be filtered out.
      </summary>
      <param name="columnName">
        The name of the column for which the criteria should be generated.
      </param>
      <returns>A string representing the current filter criteria</returns>
    </member>
    <member name="M:GridExtensions.GridFilters.NumericGridFilter.SetFilter(System.String)">
      <summary>
        Sets a string which a a previous result of
        <see cref="M:GridExtensions.GridFilters.NumericGridFilter.GetFilter(System.String)" />
        in order to configure the <see cref="P:GridExtensions.GridFilters.NumericGridFilter.FilterControl" /> to match the
        given filter criteria.
      </summary>
      <param name="filter">filter criteria</param>
      <returns></returns>
    </member>
    <member name="M:GridExtensions.GridFilters.NumericGridFilter.Clear">
      <summary>
        Clears the filter to its initial state.
      </summary>
    </member>
    <member name="T:GridExtensions.GridFilters.NumericGridFilterControl">
      <summary>
        A control with a <see cref="P:GridExtensions.GridFilters.NumericGridFilterControl.ComboBox" /> and two
        <see cref="T:System.Windows.Forms.TextBox" />es
        needed in the <see cref="T:GridExtensions.GridFilters.NumericGridFilter" />.
      </summary>
    </member>
    <member name="E:GridExtensions.GridFilters.NumericGridFilterControl.Changed">
      <summary>
        Event firing when either the <see cref="P:GridExtensions.GridFilters.NumericGridFilterControl.ComboBox" /> or
        the <see cref="T:System.Windows.Forms.TextBox" /> has changed.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.NumericGridFilterControl.#ctor">
      <summary>
        Creates a new instance
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.NumericGridFilterControl.Dispose(System.Boolean)">
      <summary>
        Cleans up.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.NumericGridFilterControl.OnResize(System.EventArgs)">
      <summary>
        Resizes the contained <see cref="T:System.Windows.Forms.DateTimePicker" />s so that they
        have the same width.
      </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:GridExtensions.GridFilters.NumericGridFilterControl.InitializeComponent">
      <summary>
        Erforderliche Methode für die Designerunterstützung.
        Der Inhalt der Methode darf nicht mit dem Code-Editor geändert werden.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.NumericGridFilterControl.TextBox1">
      <summary>
        Gets the first contained <see cref="T:System.Windows.Forms.TextBox" /> instance.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.NumericGridFilterControl.TextBox2">
      <summary>
        Gets the second contained <see cref="T:System.Windows.Forms.TextBox" /> instance.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.NumericGridFilterControl.ComboBox">
      <summary>
        Gets the contained <see cref="P:GridExtensions.GridFilters.NumericGridFilterControl.ComboBox" /> instance.
      </summary>
    </member>
    <member name="T:GridExtensions.GridFilters.TextGridFilter">
      <summary>
        A <see cref="T:GridExtensions.IGridFilter" /> implementation for filtering any columns
        with a <see cref="T:System.Windows.Forms.TextBox" /> to control the filter.
        All rows not beginning with the specified text are filtered out.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.TextGridFilter.#ctor(System.Windows.Forms.TextBox)">
      <summary>
        Creates a new instance
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.TextGridFilter.#ctor">
      <summary>
        Creates a new instance
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.TextGridFilter.Text">
      <summary>
        Gets or sets the current text of the contained <see cref="T:System.Windows.Forms.TextBox" />.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.TextGridFilter.FilterControl">
      <summary>
        The <see cref="T:System.Windows.Forms.TextBox" /> for the GUI.
      </summary>
    </member>
    <member name="P:GridExtensions.GridFilters.TextGridFilter.HasFilter">
      <summary>
        Gets whether a filter is set.
        True, if the text of the <see cref="T:System.Windows.Forms.CheckBox" /> is not empty.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.TextGridFilter.GetFilter(System.String)">
      <summary>
        Gets a filter with a like criteria in string representation
      </summary>
      <param name="columnName">
        The name of the column for which the criteria should be generated.
      </param>
      <returns>a string representing the current filter criteria</returns>
    </member>
    <member name="M:GridExtensions.GridFilters.TextGridFilter.SetFilter(System.String)">
      <summary>
        Sets a string which a a previous result of
        <see cref="M:GridExtensions.GridFilters.TextGridFilter.GetFilter(System.String)" />
        in order to configure the <see cref="P:GridExtensions.GridFilters.TextGridFilter.FilterControl" /> to match the
        given filter criteria.
      </summary>
      <param name="filter">filter criteria</param>
      <returns></returns>
    </member>
    <member name="M:GridExtensions.GridFilters.TextGridFilter.Clear">
      <summary>
        Clears the filter to its initial state.
      </summary>
    </member>
    <member name="M:GridExtensions.GridFilters.TextGridFilter.Dispose">
      <summary>
        Cleans up
      </summary>
    </member>
    <member name="T:GridExtensions.IGridExtension">
      <summary>
        Interface whichs implementors extend the DataGrid by some extra functionality
      </summary>
    </member>
    <member name="E:GridExtensions.IGridExtension.CaptionColorsChanged">
      <summary>
        Gets raised when either <see cref="P:System.Windows.Forms.DataGrid.CaptionBackColor" /> or
        <see cref="P:System.Windows.Forms.DataGrid.CaptionForeColor" /> has changed
      </summary>
    </member>
    <member name="P:GridExtensions.IGridExtension.HorizontalScrollbar">
      <summary>
        Publishes the <see cref="T:System.Windows.Forms.DataGrid" /> class's property
        <see cref="P:System.Windows.Forms.DataGrid.HorizScrollBar" />
      </summary>
    </member>
    <member name="P:GridExtensions.IGridExtension.VerticalScrollbar">
      <summary>
        Publishes the <see cref="T:System.Windows.Forms.DataGrid" /> class's property
        <see cref="P:System.Windows.Forms.DataGrid.VertScrollBar" />
      </summary>
    </member>
    <member name="P:GridExtensions.IGridExtension.CurrentView">
      <summary>
        Gets the currently visible <see cref="T:System.Data.DataView" />.
        Returns null when no <see cref="T:System.Data.DataView" /> is set.
      </summary>
    </member>
    <member name="P:GridExtensions.IGridExtension.Grid">
      <summary>
        Gets the extended <see cref="T:System.Windows.Forms.DataGrid" />.
      </summary>
    </member>
    <member name="T:GridExtensions.IGridFilter">
      <summary>
        Interface which is used to provide different filter methods
        and GUI elements for filtering in the <see cref="T:GridExtensions.FilterableDataGrid" />.
      </summary>
    </member>
    <member name="E:GridExtensions.IGridFilter.Changed">
      <summary>
        Event for notification that the filter criteria for this
        instance has changed.
      </summary>
    </member>
    <member name="P:GridExtensions.IGridFilter.FilterControl">
      <summary>
        The control which contains the GUI elements for the filter
      </summary>
    </member>
    <member name="P:GridExtensions.IGridFilter.HasFilter">
      <summary>
        Gets whether a filter is currently set
      </summary>
    </member>
    <member name="P:GridExtensions.IGridFilter.UseCustomFilterPlacement">
      <summary>
        Specifies whether the control is placed automatically or not.
      </summary>
    </member>
    <member name="M:GridExtensions.IGridFilter.GetFilter(System.String)">
      <summary>
        Gets a string representing the current filter.
        This must be a valid expression understandable by the
        <see cref="T:System.Data.DataView" /> class's property <see cref="P:System.Data.DataView.RowFilter" />.
      </summary>
      <param name="columnName">
        The name of the column for which the criteria should be generated.
      </param>
      <returns>a string representing the current filter criteria</returns>
    </member>
    <member name="M:GridExtensions.IGridFilter.SetFilter(System.String)">
      <summary>
        Sets a string which a a previous result of <see cref="M:GridExtensions.IGridFilter.GetFilter(System.String)" />
        in order to configure the <see cref="P:GridExtensions.IGridFilter.FilterControl" /> to match the
        given filter criteria.
      </summary>
      <param name="filter">filter criteria</param>
      <returns></returns>
    </member>
    <member name="M:GridExtensions.IGridFilter.Clear">
      <summary>
        Clears the filter to its initial state.
      </summary>
    </member>
    <member name="T:GridExtensions.IGridFilterFactory">
      <summary>
        Implemenations of this interface can provide the
        <see cref="T:GridExtensions.FilterableDataGrid" /> with specific implementations
        of <see cref="T:GridExtensions.IGridFilter" /> to adjust special needs for filtering.
      </summary>
    </member>
    <member name="E:GridExtensions.IGridFilterFactory.Changed">
      <summary>
        Event for notification that the behaviour of this
        instance has changed.
      </summary>
    </member>
    <member name="E:GridExtensions.IGridFilterFactory.GridFilterCreated">
      <summary>
        Event for notification when a <see cref="T:GridExtensions.IGridFilter" /> has been
        created in order to use it in a specific column and to allow
        custom modifications to it.
      </summary>
    </member>
    <member name="M:GridExtensions.IGridFilterFactory.BeginGridFilterCreation">
      <summary>
        Notifies this instance that the <see cref="T:GridExtensions.IGridFilter" /> creation process
        is being started.
      </summary>
    </member>
    <member name="M:GridExtensions.IGridFilterFactory.EndGridFilterCreation">
      <summary>
        Notifies this instance that the <see cref="T:GridExtensions.IGridFilter" /> creation process
        has finished. After this call all created <see cref="T:GridExtensions.IGridFilter" />s should
        be in a usable state.
      </summary>
    </member>
    <member
      name="M:GridExtensions.IGridFilterFactory.CreateGridFilter(System.Data.DataColumn,System.Windows.Forms.DataGridColumnStyle)">
      <summary>
        When implemented should return a valid <see cref="T:GridExtensions.IGridFilter" />
        for the specified arguments.
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> for which the filter control should be created.</param>
      <param name="columnStyle">The <see cref="T:System.Windows.Forms.DataGridColumnStyle" /> for which the filter control should be created.</param>
      <returns>A <see cref="T:GridExtensions.IGridFilter" />.</returns>
    </member>
  </members>
</doc>